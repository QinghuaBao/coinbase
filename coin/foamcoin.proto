/*
Copyright Hydrusio Labs Inc. 2016 All Rights Reserved.
Written by mint.zhao.chiu@gmail.com. github.com: https://www.github.com/mintzhao

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

		 http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package coin;

// account model digitalAssets
message Account {
    string addr = 1;
    int64 balance = 2;
    map<string, TX.TXOUT> txouts = 3;
}

message AccountSlice {
	string addr = 1;
	int64 balance = 2;
	
	repeated TxoutMap txoutmap = 3;
}

message TxoutMap {
	string key = 1;
	TX.TXOUT txouts = 2;
}

// utxo tx
message TX {
    uint64 version = 1;
    int64 timestamp = 2;    //发起交易时间
    // txin not specified who has this txin, because creator can use their txout only, txin must be creator's previous txout
    message TXIN {
        uint32 ix = 1;
        string sourceHash = 2;
        // indicate owner's addr
        string addr = 3;
        string script = 4;
        string undefined = 5;
    }
    repeated TXIN txin = 3;

    message TXOUT {
        int64 value = 1;
        string addr = 2; // who will receive this txout
        int64 until = 3; // until xx timestamp, any one cant spend the txout
        string scriptPubKey = 4;
        string undefined = 5;
    }
    repeated TXOUT txout = 4;

    string founder = 5; // who created this tx
}

// ExecResult is the result of processing a transaction
message ExecResult {
    int64 sumCurrentOutputs = 1;
    int64 sumPriorOutputs = 2;
}

// QueryAddrResults returns the result of query function query_addr
message QueryAddrResults {
    map<string, Account> accounts = 1;
}

// HydruscoinInfo
message HydruscoinInfo {
    int64 coinTotal = 1;
    int64 accountTotal = 2;
    int64 txoutTotal = 3;
    int64 txTotal = 4;

    message POVSession {
        int64 txCount = 1;
        int64 threshold = 2;
        int64 currentTotalIncentive = 3;
        int64 currentAlpha = 4;
    }
    POVSession session = 5;
    // when you init, you put other valiables into 0, so message bytes will be nil, can't be put into states
    string placeholder = 6;
}
message Test{
    int64 INCENT_T0 = 1;
    int64 INCENT_ALPHA0 = 2;
    int64 INCENT_THREADSHOLD = 3;
}