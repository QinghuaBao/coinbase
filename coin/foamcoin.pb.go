// Code generated by protoc-gen-go.
// source: foamcoin.proto
// DO NOT EDIT!

/*
Package coin is a generated protocol buffer package.

It is generated from these files:
	foamcoin.proto

It has these top-level messages:
	Account
	AccountSlice
	TxoutMap
	TX
	ExecResult
	QueryAddrResults
	HydruscoinInfo
*/
package coin

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// account model digitalAssets
type Account struct {
	Addr    string               `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
	Balance int64                `protobuf:"varint,2,opt,name=balance" json:"balance,omitempty"`
	Txouts  map[string]*TX_TXOUT `protobuf:"bytes,3,rep,name=txouts" json:"txouts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Account) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *Account) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *Account) GetTxouts() map[string]*TX_TXOUT {
	if m != nil {
		return m.Txouts
	}
	return nil
}

type AccountSlice struct {
	Addr     string      `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
	Balance  int64       `protobuf:"varint,2,opt,name=balance" json:"balance,omitempty"`
	Txoutmap []*TxoutMap `protobuf:"bytes,3,rep,name=txoutmap" json:"txoutmap,omitempty"`
}

func (m *AccountSlice) Reset()                    { *m = AccountSlice{} }
func (m *AccountSlice) String() string            { return proto.CompactTextString(m) }
func (*AccountSlice) ProtoMessage()               {}
func (*AccountSlice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AccountSlice) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *AccountSlice) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *AccountSlice) GetTxoutmap() []*TxoutMap {
	if m != nil {
		return m.Txoutmap
	}
	return nil
}

type TxoutMap struct {
	Key    string    `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Txouts *TX_TXOUT `protobuf:"bytes,2,opt,name=txouts" json:"txouts,omitempty"`
}

func (m *TxoutMap) Reset()                    { *m = TxoutMap{} }
func (m *TxoutMap) String() string            { return proto.CompactTextString(m) }
func (*TxoutMap) ProtoMessage()               {}
func (*TxoutMap) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *TxoutMap) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *TxoutMap) GetTxouts() *TX_TXOUT {
	if m != nil {
		return m.Txouts
	}
	return nil
}

// utxo tx
type TX struct {
	Version   uint64      `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Timestamp int64       `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Txin      []*TX_TXIN  `protobuf:"bytes,3,rep,name=txin" json:"txin,omitempty"`
	Txout     []*TX_TXOUT `protobuf:"bytes,4,rep,name=txout" json:"txout,omitempty"`
	Founder   string      `protobuf:"bytes,5,opt,name=founder" json:"founder,omitempty"`
}

func (m *TX) Reset()                    { *m = TX{} }
func (m *TX) String() string            { return proto.CompactTextString(m) }
func (*TX) ProtoMessage()               {}
func (*TX) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *TX) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *TX) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *TX) GetTxin() []*TX_TXIN {
	if m != nil {
		return m.Txin
	}
	return nil
}

func (m *TX) GetTxout() []*TX_TXOUT {
	if m != nil {
		return m.Txout
	}
	return nil
}

func (m *TX) GetFounder() string {
	if m != nil {
		return m.Founder
	}
	return ""
}

// txin not specified who has this txin, because creator can use their txout only, txin must be creator's previous txout
type TX_TXIN struct {
	Ix         uint32 `protobuf:"varint,1,opt,name=ix" json:"ix,omitempty"`
	SourceHash string `protobuf:"bytes,2,opt,name=sourceHash" json:"sourceHash,omitempty"`
	// indicate owner's addr
	Addr      string `protobuf:"bytes,3,opt,name=addr" json:"addr,omitempty"`
	Script    string `protobuf:"bytes,4,opt,name=script" json:"script,omitempty"`
	Undefined string `protobuf:"bytes,5,opt,name=undefined" json:"undefined,omitempty"`
}

func (m *TX_TXIN) Reset()                    { *m = TX_TXIN{} }
func (m *TX_TXIN) String() string            { return proto.CompactTextString(m) }
func (*TX_TXIN) ProtoMessage()               {}
func (*TX_TXIN) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 0} }

func (m *TX_TXIN) GetIx() uint32 {
	if m != nil {
		return m.Ix
	}
	return 0
}

func (m *TX_TXIN) GetSourceHash() string {
	if m != nil {
		return m.SourceHash
	}
	return ""
}

func (m *TX_TXIN) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *TX_TXIN) GetScript() string {
	if m != nil {
		return m.Script
	}
	return ""
}

func (m *TX_TXIN) GetUndefined() string {
	if m != nil {
		return m.Undefined
	}
	return ""
}

type TX_TXOUT struct {
	Value        int64  `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
	Addr         string `protobuf:"bytes,2,opt,name=addr" json:"addr,omitempty"`
	Until        int64  `protobuf:"varint,3,opt,name=until" json:"until,omitempty"`
	ScriptPubKey string `protobuf:"bytes,4,opt,name=scriptPubKey" json:"scriptPubKey,omitempty"`
	Undefined    string `protobuf:"bytes,5,opt,name=undefined" json:"undefined,omitempty"`
}

func (m *TX_TXOUT) Reset()                    { *m = TX_TXOUT{} }
func (m *TX_TXOUT) String() string            { return proto.CompactTextString(m) }
func (*TX_TXOUT) ProtoMessage()               {}
func (*TX_TXOUT) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 1} }

func (m *TX_TXOUT) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *TX_TXOUT) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *TX_TXOUT) GetUntil() int64 {
	if m != nil {
		return m.Until
	}
	return 0
}

func (m *TX_TXOUT) GetScriptPubKey() string {
	if m != nil {
		return m.ScriptPubKey
	}
	return ""
}

func (m *TX_TXOUT) GetUndefined() string {
	if m != nil {
		return m.Undefined
	}
	return ""
}

// ExecResult is the result of processing a transaction
type ExecResult struct {
	SumCurrentOutputs int64 `protobuf:"varint,1,opt,name=sumCurrentOutputs" json:"sumCurrentOutputs,omitempty"`
	SumPriorOutputs   int64 `protobuf:"varint,2,opt,name=sumPriorOutputs" json:"sumPriorOutputs,omitempty"`
}

func (m *ExecResult) Reset()                    { *m = ExecResult{} }
func (m *ExecResult) String() string            { return proto.CompactTextString(m) }
func (*ExecResult) ProtoMessage()               {}
func (*ExecResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ExecResult) GetSumCurrentOutputs() int64 {
	if m != nil {
		return m.SumCurrentOutputs
	}
	return 0
}

func (m *ExecResult) GetSumPriorOutputs() int64 {
	if m != nil {
		return m.SumPriorOutputs
	}
	return 0
}

// QueryAddrResults returns the result of query function query_addr
type QueryAddrResults struct {
	Accounts map[string]*Account `protobuf:"bytes,1,rep,name=accounts" json:"accounts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *QueryAddrResults) Reset()                    { *m = QueryAddrResults{} }
func (m *QueryAddrResults) String() string            { return proto.CompactTextString(m) }
func (*QueryAddrResults) ProtoMessage()               {}
func (*QueryAddrResults) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *QueryAddrResults) GetAccounts() map[string]*Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

// HydruscoinInfo
type HydruscoinInfo struct {
	CoinTotal    int64                      `protobuf:"varint,1,opt,name=coinTotal" json:"coinTotal,omitempty"`
	AccountTotal int64                      `protobuf:"varint,2,opt,name=accountTotal" json:"accountTotal,omitempty"`
	TxoutTotal   int64                      `protobuf:"varint,3,opt,name=txoutTotal" json:"txoutTotal,omitempty"`
	TxTotal      int64                      `protobuf:"varint,4,opt,name=txTotal" json:"txTotal,omitempty"`
	Session      *HydruscoinInfo_POVSession `protobuf:"bytes,5,opt,name=session" json:"session,omitempty"`
	// when you init, you put other valiables into 0, so message bytes will be nil, can't be put into states
	Placeholder string `protobuf:"bytes,6,opt,name=placeholder" json:"placeholder,omitempty"`
}

func (m *HydruscoinInfo) Reset()                    { *m = HydruscoinInfo{} }
func (m *HydruscoinInfo) String() string            { return proto.CompactTextString(m) }
func (*HydruscoinInfo) ProtoMessage()               {}
func (*HydruscoinInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *HydruscoinInfo) GetCoinTotal() int64 {
	if m != nil {
		return m.CoinTotal
	}
	return 0
}

func (m *HydruscoinInfo) GetAccountTotal() int64 {
	if m != nil {
		return m.AccountTotal
	}
	return 0
}

func (m *HydruscoinInfo) GetTxoutTotal() int64 {
	if m != nil {
		return m.TxoutTotal
	}
	return 0
}

func (m *HydruscoinInfo) GetTxTotal() int64 {
	if m != nil {
		return m.TxTotal
	}
	return 0
}

func (m *HydruscoinInfo) GetSession() *HydruscoinInfo_POVSession {
	if m != nil {
		return m.Session
	}
	return nil
}

func (m *HydruscoinInfo) GetPlaceholder() string {
	if m != nil {
		return m.Placeholder
	}
	return ""
}

type HydruscoinInfo_POVSession struct {
	TxCount               int64   `protobuf:"varint,1,opt,name=txCount" json:"txCount,omitempty"`
	Threshold             int64   `protobuf:"varint,2,opt,name=threshold" json:"threshold,omitempty"`
	CurrentTotalIncentive int64   `protobuf:"varint,3,opt,name=currentTotalIncentive" json:"currentTotalIncentive,omitempty"`
	CurrentAlpha          float32 `protobuf:"fixed32,4,opt,name=currentAlpha" json:"currentAlpha,omitempty"`
}

func (m *HydruscoinInfo_POVSession) Reset()                    { *m = HydruscoinInfo_POVSession{} }
func (m *HydruscoinInfo_POVSession) String() string            { return proto.CompactTextString(m) }
func (*HydruscoinInfo_POVSession) ProtoMessage()               {}
func (*HydruscoinInfo_POVSession) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6, 0} }

func (m *HydruscoinInfo_POVSession) GetTxCount() int64 {
	if m != nil {
		return m.TxCount
	}
	return 0
}

func (m *HydruscoinInfo_POVSession) GetThreshold() int64 {
	if m != nil {
		return m.Threshold
	}
	return 0
}

func (m *HydruscoinInfo_POVSession) GetCurrentTotalIncentive() int64 {
	if m != nil {
		return m.CurrentTotalIncentive
	}
	return 0
}

func (m *HydruscoinInfo_POVSession) GetCurrentAlpha() float32 {
	if m != nil {
		return m.CurrentAlpha
	}
	return 0
}

func init() {
	proto.RegisterType((*Account)(nil), "coin.Account")
	proto.RegisterType((*AccountSlice)(nil), "coin.AccountSlice")
	proto.RegisterType((*TxoutMap)(nil), "coin.TxoutMap")
	proto.RegisterType((*TX)(nil), "coin.TX")
	proto.RegisterType((*TX_TXIN)(nil), "coin.TX.TXIN")
	proto.RegisterType((*TX_TXOUT)(nil), "coin.TX.TXOUT")
	proto.RegisterType((*ExecResult)(nil), "coin.ExecResult")
	proto.RegisterType((*QueryAddrResults)(nil), "coin.QueryAddrResults")
	proto.RegisterType((*HydruscoinInfo)(nil), "coin.HydruscoinInfo")
	proto.RegisterType((*HydruscoinInfo_POVSession)(nil), "coin.HydruscoinInfo.POVSession")
}

func init() { proto.RegisterFile("foamcoin.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 672 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x94, 0x4d, 0x6f, 0xd3, 0x4c,
	0x10, 0xc7, 0xe5, 0x97, 0xa4, 0xed, 0xa4, 0xc9, 0xd3, 0x67, 0xd5, 0xe7, 0x51, 0x88, 0x10, 0x04,
	0x53, 0xa1, 0x08, 0xa1, 0x48, 0x14, 0x0e, 0xc0, 0x89, 0xaa, 0x54, 0x6a, 0x40, 0xd0, 0xe2, 0x06,
	0xd4, 0xeb, 0xd6, 0xde, 0x28, 0x16, 0xce, 0xae, 0xb5, 0x2f, 0x55, 0x72, 0xe3, 0x0a, 0x1f, 0x02,
	0xf1, 0x09, 0xb8, 0xf1, 0xfd, 0xd0, 0xbe, 0xd8, 0xb1, 0x4b, 0x84, 0xc4, 0x6d, 0xe7, 0x3f, 0xe3,
	0x9d, 0xdf, 0xcc, 0xce, 0x18, 0x7a, 0x33, 0x86, 0x17, 0x09, 0xcb, 0xe8, 0xb8, 0xe0, 0x4c, 0x32,
	0x14, 0xea, 0x73, 0xf4, 0xd3, 0x83, 0xad, 0xa3, 0x24, 0x61, 0x8a, 0x4a, 0x84, 0x20, 0xc4, 0x69,
	0xca, 0xfb, 0xde, 0xd0, 0x1b, 0xed, 0xc4, 0xe6, 0x8c, 0xfa, 0xb0, 0x75, 0x85, 0x73, 0x4c, 0x13,
	0xd2, 0xf7, 0x87, 0xde, 0x28, 0x88, 0x4b, 0x13, 0x3d, 0x86, 0xb6, 0x5c, 0x32, 0x25, 0x45, 0x3f,
	0x18, 0x06, 0xa3, 0xce, 0xe1, 0xad, 0xb1, 0xb9, 0xdc, 0x5d, 0x36, 0x9e, 0x1a, 0xdf, 0x09, 0x95,
	0x7c, 0x15, 0xbb, 0xc0, 0xc1, 0x04, 0x3a, 0x35, 0x19, 0xed, 0x41, 0xf0, 0x89, 0xac, 0x5c, 0x3a,
	0x7d, 0x44, 0x07, 0xd0, 0xba, 0xc6, 0xb9, 0xb2, 0xb9, 0x3a, 0x87, 0x3d, 0x7b, 0xe5, 0xf4, 0x72,
	0x3c, 0xbd, 0x3c, 0xfb, 0x30, 0x8d, 0xad, 0xf3, 0x85, 0xff, 0xcc, 0x8b, 0xe6, 0xb0, 0xeb, 0x32,
	0x5d, 0xe4, 0x59, 0x42, 0xfe, 0x92, 0xfd, 0x21, 0x6c, 0x1b, 0xa4, 0x05, 0x2e, 0x1c, 0x7d, 0x99,
	0x4a, 0xab, 0x6f, 0x71, 0x11, 0x57, 0xfe, 0xe8, 0x15, 0x6c, 0x97, 0xea, 0x06, 0xe2, 0x07, 0x55,
	0x17, 0x36, 0x23, 0x3b, 0x6f, 0xf4, 0x23, 0x00, 0x7f, 0x7a, 0xa9, 0x91, 0xae, 0x09, 0x17, 0x19,
	0xa3, 0xe6, 0x92, 0x30, 0x2e, 0x4d, 0x74, 0x1b, 0x76, 0x64, 0xb6, 0x20, 0x42, 0xe2, 0x45, 0xe1,
	0x70, 0xd7, 0x02, 0xba, 0x07, 0xa1, 0x5c, 0x66, 0xd4, 0xc1, 0x76, 0x6b, 0x49, 0x26, 0xef, 0x62,
	0xe3, 0xd2, 0xbd, 0x33, 0xb9, 0xfa, 0x61, 0xa3, 0xa0, 0xaa, 0x77, 0xc6, 0xa9, 0x01, 0x66, 0x4c,
	0xd1, 0x94, 0xf0, 0x7e, 0xcb, 0x54, 0x51, 0x9a, 0x83, 0xcf, 0x1e, 0x84, 0xfa, 0x3a, 0xd4, 0x03,
	0x3f, 0x5b, 0x1a, 0xbc, 0x6e, 0xec, 0x67, 0x4b, 0x74, 0x07, 0x40, 0x30, 0xc5, 0x13, 0x72, 0x8a,
	0xc5, 0xdc, 0xa0, 0xed, 0xc4, 0x35, 0xa5, 0x6a, 0x7d, 0x50, 0x6b, 0xfd, 0xff, 0xd0, 0x16, 0x09,
	0xcf, 0x0a, 0x4d, 0xa3, 0x55, 0x67, 0xe9, 0x2a, 0x75, 0xb6, 0x59, 0x46, 0x49, 0xea, 0x00, 0xd6,
	0xc2, 0xe0, 0x8b, 0x07, 0x2d, 0x43, 0x8b, 0xf6, 0xcb, 0x41, 0xf0, 0x4c, 0x27, 0xac, 0x51, 0x65,
	0xf2, 0x6b, 0x99, 0xf6, 0xa1, 0xa5, 0xa8, 0xcc, 0x72, 0x93, 0x3e, 0x88, 0xad, 0x81, 0x22, 0xd8,
	0xb5, 0x19, 0xcf, 0xd5, 0xd5, 0x1b, 0xb2, 0x72, 0x14, 0x0d, 0xed, 0xcf, 0x2c, 0x51, 0x0a, 0x70,
	0xb2, 0x24, 0x49, 0x4c, 0x84, 0xca, 0x25, 0x7a, 0x04, 0xff, 0x0a, 0xb5, 0x38, 0x56, 0x9c, 0x13,
	0x2a, 0xcf, 0x94, 0x2c, 0xf4, 0x8b, 0x5b, 0xb6, 0xdf, 0x1d, 0x68, 0x04, 0xff, 0x08, 0xb5, 0x38,
	0xe7, 0x19, 0xe3, 0x65, 0xac, 0x7d, 0xd1, 0x9b, 0x72, 0xf4, 0xdd, 0x83, 0xbd, 0xf7, 0x8a, 0xf0,
	0xd5, 0x51, 0x9a, 0x72, 0x9b, 0x4b, 0xa0, 0x97, 0xb0, 0x8d, 0xed, 0x6c, 0xeb, 0x1c, 0xfa, 0x31,
	0x0f, 0xec, 0x63, 0xde, 0x8c, 0x2c, 0x97, 0xcd, 0xad, 0x59, 0xf5, 0xd5, 0xe0, 0x35, 0x74, 0x1b,
	0xae, 0x0d, 0x83, 0x7b, 0xbf, 0xb9, 0x6a, 0xdd, 0xc6, 0xf6, 0xd6, 0x37, 0xed, 0x6b, 0x00, 0xbd,
	0xd3, 0x55, 0xca, 0x95, 0xd0, 0x11, 0x13, 0x3a, 0x63, 0xba, 0x73, 0xfa, 0x3c, 0x65, 0x12, 0xe7,
	0xae, 0x0b, 0x6b, 0x41, 0xf7, 0xde, 0x81, 0xd8, 0x00, 0x5b, 0x7a, 0x43, 0xd3, 0x33, 0x65, 0xe6,
	0xd1, 0x46, 0xd8, 0xa7, 0xab, 0x29, 0x7a, 0x4c, 0xe5, 0xd2, 0x3a, 0x43, 0xbb, 0xba, 0xce, 0x44,
	0xcf, 0x61, 0x4b, 0x10, 0x61, 0x36, 0xa8, 0x65, 0xc8, 0xef, 0x5a, 0xf2, 0x26, 0xe2, 0xf8, 0xfc,
	0xec, 0xe3, 0x85, 0x0d, 0x8b, 0xcb, 0x78, 0x34, 0x84, 0x4e, 0x91, 0xe3, 0x84, 0xcc, 0x59, 0xae,
	0xe7, 0xbf, 0x6d, 0x9a, 0x51, 0x97, 0x06, 0xdf, 0x3c, 0x80, 0xf5, 0x97, 0x96, 0xe2, 0x58, 0x53,
	0xbb, 0x2a, 0x4b, 0xd3, 0x6c, 0xeb, 0x9c, 0x13, 0xa1, 0xbf, 0xab, 0xb6, 0xb5, 0x14, 0xd0, 0x53,
	0xf8, 0x2f, 0xb1, 0x13, 0x61, 0x98, 0x27, 0x34, 0x21, 0x54, 0x66, 0xd7, 0xc4, 0x15, 0xba, 0xd9,
	0xa9, 0xfb, 0xe6, 0x1c, 0x47, 0x79, 0x31, 0xc7, 0xa6, 0x70, 0x3f, 0x6e, 0x68, 0x57, 0x6d, 0xf3,
	0xef, 0x7e, 0xf2, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x14, 0x6f, 0x49, 0x4a, 0xcd, 0x05, 0x00, 0x00,
}
